import numpy as np
import cv2
import Transformations as tr

keypoints = np.array([[113, 255], [148, 26], [148, 27], [148, 28], [149, 26], [149, 27], [149, 28], [150, 26], [150, 27], [150, 28], [151, 26], [151, 27], [151, 28], [152, 26], [152, 27], [153, 25], [153, 26], [153, 27], [154, 18], [154, 19], [154, 20], [154, 21], [154, 22], [154, 23], [154, 24], [154, 25], [154, 26], [154, 27], [155, 19], [155, 20], [155, 21], [155, 22], [155, 23], [155, 24], [155, 25], [155, 26], [155, 27], [156, 20], [156, 21], [156, 22], [156, 23], [156, 37], [156, 38], [156, 58], [156, 59], [156, 60], [156, 61], [156, 62], [156, 63], [156, 64], [156, 65], [156, 66], [157, 36], [157, 37], [157, 38], [157, 39], [157, 58], [157, 59], [157, 60], [157, 61], [157, 62], [157, 63], [157, 64], [157, 65], [157, 66], [158, 35], [158, 36], [158, 37], [158, 38], [158, 39], [158, 40], [158, 58], [158, 59], [158, 60], [158, 61], [158, 62], [158, 63], [158, 64], [158, 65], [158, 66], [159, 36], [159, 37], [159, 38], [159, 39], [159, 40], [159, 41], [159, 60], [159, 61], [159, 62], [159, 63], [159, 64], [159, 65], [159, 66], [159, 72], [159, 73], [159, 74], [159, 75], [159, 76], [160, 36], [160, 37], [160, 38], [160, 39], [160, 40], [160, 41], [160, 60], [160, 61], [160, 62], [160, 63], [160, 64], [160, 65], [160, 71], [160, 72], [160, 73], [160, 74], [160, 75], [160, 76], [160, 77], [161, 37], [161, 38], [161, 39], [161, 40], [161, 61], [161, 62], [161, 63], [161, 64], [161, 65], [161, 70], [161, 71], [161, 72], [161, 73], [161, 74], [161, 75], [161, 76], [161, 77], [161, 91], [161, 95], [161, 96], [161, 97], [161, 98], [161, 102], [162, 38], [162, 39], [162, 40], [162, 60], [162, 61], [162, 62], [162, 63], [162, 64], [162, 65], [162, 70], [162, 71], [162, 72], [162, 73], [162, 74], [162, 75], [162, 76], [162, 77], [162, 91], [162, 92], [162, 94], [162, 95], [162, 96], [162, 97], [162, 98], [162, 99], [162, 100], [162, 101], [162, 102], [162, 131], [163, 21], [163, 38], [163, 39], [163, 40], [163, 60], [163, 61], [163, 62], [163, 63], [163, 64], [163, 69], [163, 70], [163, 71], [163, 72], [163, 73], [163, 74], [163, 75], [163, 76], [163, 77], [163, 92], [163, 94], [163, 95], [163, 96], [163, 97], [163, 98], [163, 99], [163, 100], [163, 101], [163, 102], [163, 130], [163, 131], [164, 21], [164, 38], [164, 39], [164, 40], [164, 60], [164, 61], [164, 62], [164, 63], [164, 64], [164, 70], [164, 71], [164, 72], [164, 73], [164, 74], [164, 75], [164, 76], [164, 77], [164, 94], [164, 95], [164, 96], [164, 97], [164, 98], [164, 99], [164, 100], [164, 101], [164, 102], [164, 130], [164, 131], [164, 132], [165, 15], [165, 16], [165, 38], [165, 39], [165, 40], [165, 61], [165, 62], [165, 63], [165, 64], [165, 70], [165, 71], [165, 72], [165, 73], [165, 74], [165, 75], [165, 76], [165, 77], [165, 95], [165, 96], [165, 97], [165, 98], [165, 99], [165, 100], [165, 101], [165, 102], [165, 130], [165, 131], [165, 132], [166, 15], [166, 16], [166, 17], [166, 18], [166, 19], [166, 20], [166, 62], [166, 63], [166, 64], [166, 70], [166, 71], [166, 72], [166, 73], [166, 74], [166, 75], [166, 76], [166, 77], [166, 96], [166, 97], [166, 98], [166, 99], [166, 100], [166, 101], [166, 102], [166, 130], [166, 131], [166, 132], [166, 141], [166, 142], [167, 15], [167, 16], [167, 17], [167, 18], [167, 19], [167, 20], [167, 63], [167, 70], [167, 71], [167, 72], [167, 73], [167, 74], [167, 75], [167, 76], [167, 77], [167, 96], [167, 97], [167, 98], [167, 99], [167, 100], [167, 101], [167, 102], [167, 130], [167, 131], [167, 132], [167, 141], [167, 142], [168, 15], [168, 16], [168, 17], [168, 18], [168, 63], [168, 64], [168, 70], [168, 71], [168, 72], [168, 73], [168, 74], [168, 75], [168, 96], [168, 97], [168, 98], [168, 99], [168, 100], [168, 101], [168, 102],[168, 115], [168, 116], [168, 117], [168, 130], [168, 131], [168, 132], [169, 15], [169, 16], [169, 17], [169, 63], [169, 64], [169, 70], [169, 71], [169, 72], [169, 73], [169, 74], [169, 96], [169, 97], [169, 98], [169, 99], [169, 100], [169, 101], [169, 115], [169, 116], [169, 117], [169, 130], [169, 131], [169, 132], [170, 57], [170, 58], [170, 70], [170, 71], [170, 72], [170, 73], [170, 96], [170, 97], [170, 98], [170, 99], [170, 100], [170, 101], [170, 115], [170, 116], [170, 117], [170, 131], [171, 57], [171, 58], [171, 71], [171, 72], [171, 95], [171, 96], [171, 100], [171, 101], [171, 115], [171, 116], [171, 117], [171, 131], [172, 96], [172, 99], [172, 100], [172, 101], [172, 131], [173, 99], [173, 100], [173, 101], [173, 131], [174, 100], [174, 131], [186, 18], [186, 19], [187, 17], [187, 18], [187, 19], [187, 20], [188, 17], [188, 18], [188, 19], [188, 20], [189, 15], [189, 18], [189, 19], [189, 51], [189, 52], [189, 98], [189, 99], [189, 100], [189, 101], [189, 102], [190, 14], [190, 15], [190, 16], [190, 98], [190, 99], [190, 100], [190, 101], [190, 102], [190, 103], [191, 0], [191, 13], [191, 14], [191, 15], [191, 85], [191, 86], [191, 87], [191, 99], [191, 100], [191, 101], [191, 102], [191, 103], [192, 0], [192, 12], [192, 13], [192, 14], [192, 15], [192, 85], [192, 86], [192, 87], [193, 0], [193, 10], [193, 11], [193, 12], [193, 13], [193, 14], [194, 0], [194, 9], [194, 10], [194, 11], [194, 12], [194, 13], [195, 8], [195, 9], [195, 10], [195, 11], [195, 12], [195, 62], [196, 7], [196, 8], [196, 9], [196, 10], [196, 11], [196, 62], [196, 63], [196, 73], [196, 74], [196, 75], [197, 7], [197, 8], [197, 9], [197, 10], [197, 62], [197, 63], [198, 7], [198, 8], [198, 9], [198, 62], [199, 7], [199, 8], [199, 9], [200, 7], [200, 8], [200, 9], [201, 7], [201, 8], [201, 221], [201, 222], [201, 223], [201, 224], [201, 225], [201, 226], [201, 227], [201, 228], [201, 229], [201, 230], [201, 231], [201, 232], [201, 233], [201, 234], [201, 235], [201, 236], [201, 237], [201, 238], [201, 239], [201, 240], [201, 241], [202, 221], [202, 222], [202, 223], [202, 224], [202, 225], [202, 226], [202, 227], [202, 228], [202, 229], [202, 230], [202, 231], [202, 232], [202, 233], [202, 234], [202, 235], [202, 236], [202, 237], [202, 238], [202, 239], [202, 240], [202, 241], [202, 242], [202, 243], [202, 244], [202, 245], [202, 246], [203, 221], [203, 222], [203, 223], [203, 224], [203, 225], [203, 226], [203, 227], [203, 228], [203, 229], [203, 230], [203, 231], [203, 232], [203, 233], [203, 234], [203, 235], [203, 236], [203, 237], [203, 238], [203, 239], [203, 240], [203, 241], [203, 242], [203, 243], [203, 244], [203, 245], [203, 246], [203, 247], [204, 221], [204, 222], [204, 223], [204, 226], [204, 227], [204, 228], [204, 229], [204, 230], [204, 231], [204, 232], [204, 233], [204, 234], [204, 235], [204, 236], [204, 237], [204, 238], [204, 239], [204, 240], [204, 241], [204, 242], [204, 243], [204, 244], [204, 245], [204, 246], [204, 247], [205, 221], [205, 222], [205, 227], [205, 228], [205, 229], [205, 230], [205, 231], [205, 232], [205, 233], [205, 234], [205, 235], [205, 236], [205, 237], [205, 238], [205, 239], [205, 240], [205, 241], [205, 242], [205, 243], [205, 244], [205, 245], [205, 246], [205, 247], [206, 227], [206, 228], [206, 229], [206, 230], [206, 231], [206, 232], [206, 233], [206, 234], [206, 235], [206, 236], [206, 237], [206, 238], [206, 239], [206, 240], [206, 241], [206, 242], [206, 243], [206, 244], [206, 245], [206, 246], [206, 247], [206, 248], [207, 227], [207, 228], [207, 229], [207, 230], [207, 231], [207, 232], [207, 233], [207, 234], [207, 235], [207, 236], [207, 237], [207, 238], [207, 239], [207, 240], [207, 241], [207, 242], [207, 243], [207, 244], [207, 245], [207, 246], [207, 247], [207, 248], [207, 249], [208, 229], [208, 230], [208, 231], [208, 232], [208, 233], [208, 234], [208, 235], [208, 236], [208, 237], [208, 238], [208, 239], [208, 240], [208, 241], [208, 242], [208, 243], [208, 244], [208, 245], [208, 246], [208, 247], [208, 248], [208, 249], [209, 235], [209, 236], [209, 237], [209, 238], [209, 239], [209, 240], [209, 241], [209, 242], [209, 243], [209, 244], [209, 245], [209, 246], [209, 247], [209, 248], [209, 249], [210, 243], [210, 244], [210, 245], [210, 246], [210, 247], [210, 248], [210, 249]])
transformed_keypoints = np.array([[113, 236], [114, 235], [114, 236], [114, 237], [115, 235], [115, 236], [115, 237], [116, 235], [116, 236], [116, 237], [145,  41], [145,  42], [145,  43], [146,  41], [146,  42], [146,  43], [147,  41], [147,  42], [148,  40], [148,  41], [148,  42], [149,  35], [149,  36], [149,  39], [149,  40], [149,  41], [149,  42], [150,  35], [150,  36], [150,  37], [150,  38], [150,  39], [150,  40], [150,  41], [151,  36], [151,  37], [151,  38], [151,  39], [151,  40], [151,  49], [151,  50], [151,  51], [151,  52], [152,  37], [152,  38], [152,  49], [152,  50], [152,  51], [152,  52], [152,  53], [152,  68], [152,  69], [152,  70], [152,  71], [152,  72], [152,  73], [152,  74], [152,  75], [153,  49], [153,  50], [153,  51], [153,  52], [153,  53], [153,  69], [153,  70], [153,  71], [153,  72], [153,  73], [153,  74], [153,  75], [153,  80], [153,  81], [154,  49], [154,  50], [154,  51], [154,  52], [154,  53], [154,  69], [154,  70], [154,  71], [154,  72], [154,  73], [154,  74], [154,  79], [154,  80], [154,  81], [154,  82], [154,  83], [154, 101], [154, 102], [154, 103], [154, 104], [154, 105], [155,  50], [155,  51], [155,  52], [155,  53], [155,  70], [155,  71], [155,  72], [155,  73], [155,  74], [155,  78], [155,  79], [155,  80], [155,  81], [155,  82], [155,  83], [155,  84], [155,  99], [155, 100], [155, 101], [155, 102], [155, 103], [155, 104], [155, 105], [156,  51], [156,  52], [156,  53], [156,  70], [156,  71], [156,  72], [156,  73], [156,  78], [156,  79], [156,  80], [156,  81], [156,  82], [156,  83], [156,  84], [156,  98], [156,  99], [156, 100], [156, 101], [156, 102], [156, 103], [156, 104], [156, 105], [157,  51], [157,  52], [157,  53], [157,  70], [157,  71], [157,  72], [157,  73], [157,  78], [157,  79], [157,  80], [157,  81], [157,  82], [157,  83], [157,  84], [157,  98], [157,  99], [157, 100], [157, 101], [157, 102], [157, 103], [157, 104], [157, 105], [157, 130], [158,  36], [158,  51], [158,  52], [158,  53], [158,  70], [158,  71], [158,  72], [158,  73], [158,  78], [158,  79], [158,  80], [158,  81], [158,  82], [158,  83], [158,  84], [158,  98], [158,  99], [158, 100], [158, 101], [158, 102], [158, 103], [158, 104], [158, 105], [158, 130], [159,  32], [159,  33], [159,  34], [159,  35], [159,  52], [159,  71], [159,  72], [159,  73], [159,  79], [159,  80], [159,  81], [159,  82], [159,  83], [159,  84], [159,  99], [159, 100], [159, 101], [159, 102], [159, 103], [159, 104], [159, 105], [159, 130], [160,  32], [160,  33], [160,  34], [160,  35], [160,  71], [160,  72], [160,  73], [160,  79], [160,  80], [160,  81], [160,  82], [160,  83], [160,  84], [160, 100], [160, 101], [160, 102], [160, 103], [160, 104], [160, 105], [160, 116], [160, 117], [160, 118], [160, 119], [160, 130], [161,  32], [161,  33], [161,  34], [161,  35], [161,  72], [161,  79], [161,  80], [161,  81], [161,  82], [161,  83], [161, 100], [161, 101], [161, 102], [161, 103], [161, 104], [161, 105], [161, 116], [161, 117], [161, 118], [161, 119], [161, 130], [162,  32], [162,  33], [162,  79], [162,  80], [162,  81], [162,  82], [162,  83], [162, 100], [162, 101], [162, 102], [162, 103], [162, 104], [162, 105], [162, 116], [162, 117], [162, 118], [162, 119], [162, 130], [163,  79], [163,  80], [163,  81], [163,  82], [163,  83], [163, 100], [163, 101], [163, 102], [163, 103], [163, 104], [163, 105], [163, 117], [163, 118], [163, 119], [164, 100], [164, 101], [164, 102], [164, 103], [164, 104], [164, 105], [164, 118], [165, 101], [165, 102], [165, 103], [165, 104], [165, 105], [166, 102], [166, 103], [166, 104], [177, 34], [177, 35], [178, 33], [178, 34], [178, 35], [179, 32], [179, 33], [179, 34], [179, 35], [179, 51], [179, 52], [179, 53], [179, 106], [180, 31], [180, 32], [180, 51], [180, 52], [180, 102], [180, 103], [180, 104], [180, 105], [180, 106], [180, 107], [180, 108], [180, 109], [181, 30], [181, 31], [181, 51], [181, 52], [181, 103], [181, 104], [181, 105], [181, 106], [181, 107], [181, 108], [182, 28], [182, 29], [182, 30], [182, 31], [183, 26], [183, 27], [183, 28], [183, 29], [183, 30], [183, 221], [184, 26], [184, 27], [184, 28], [184, 29], [184, 30], [184, 73], [185, 25], [185, 26], [185, 27], [185, 28], [185, 61], [185, 72], [185, 73], [185, 74], [185, 75], [186, 25], [186, 26], [186, 27], [186, 60], [186, 61], [186, 62], [186, 72], [186, 73], [186, 74], [186, 75], [187, 25], [187, 26], [187, 27], [188, 25], [188, 26], [189, 24], [189, 25], [189, 26], [190, 24], [190, 25], [190, 207], [190, 208], [190, 209], [190, 210], [190, 211], [190, 212], [190, 213], [190, 214], [190, 215], [190, 216], [190, 217], [190, 218], [190, 219], [190, 220], [190, 221], [190, 222], [190, 223], [190, 224], [190, 225], [190, 226], [190, 227], [190, 228], [191, 24], [191, 207], [191, 208], [191, 209], [191, 210], [191, 211], [191, 212], [191, 213], [191, 214], [191, 215], [191, 216], [191, 217], [191, 218], [191, 219], [191, 220], [191, 221], [191, 222], [191, 223], [191, 224], [191, 225], [191, 226], [191, 227], [191, 228], [191, 229], [191, 230], [191, 231], [192, 24], [192, 207], [192, 208], [192, 211], [192, 212], [192, 213], [192, 214], [192, 215], [192, 216], [192, 217], [192, 218], [192, 219], [192, 220], [192, 221], [192, 222], [192, 223], [192, 224], [192, 225], [192, 226], [192, 227], [192, 228], [192, 229], [192, 230], [192, 231], [193, 211], [193, 212], [193, 213], [193, 214], [193, 215], [193, 216], [193, 217], [193, 218], [193, 219], [193, 220], [193, 221], [193, 222], [193, 223], [193, 224], [193, 225], [193, 226], [193, 227], [193, 228], [193, 229], [193, 230], [194, 24], [194, 212], [194, 213], [194, 214], [194, 215], [194, 216], [194, 217], [194, 218], [194, 219], [194, 220], [194, 221], [194, 222], [194, 223], [194, 224], [194, 225], [194, 226], [194, 227], [194, 228], [194, 229], [194, 230], [195, 213], [195, 214], [195, 215], [195, 216], [195, 217], [195, 218], [195, 219], [195, 220], [195, 221], [195, 222], [195, 223], [195, 224], [195, 225], [195, 226], [195, 227], [195, 228], [195, 229], [195, 230], [196, 221], [196, 222], [196, 223], [196, 224], [196, 225], [196, 226], [196, 227], [196, 228], [196, 229], [196, 230]])

keypoints = tr.scale(keypoints, 85)
keypoints_cv2 = [cv2.KeyPoint(x=kp[0], y=kp[1], size=1) for kp in keypoints.astype(float)]
transformed_keypoints_cv2 = [cv2.KeyPoint(x=kp[0], y=kp[1], size=1) for kp in transformed_keypoints.astype(float)]

img1 = cv2.imread('../img/originals/2.jpg', cv2.IMREAD_GRAYSCALE)
img2 = cv2.imread('../img/scale/2.jpg', cv2.IMREAD_GRAYSCALE)

# Verificar que ambas imágenes se hayan cargado
if img1 is None or img2 is None:
    raise ValueError("Una o ambas imágenes no pudieron cargarse. Verifique las rutas de archivo.")

# Crear el detector SURF (ajustar hessianThreshold según sea necesario)
sift = cv2.SIFT_create()

# Detectar y calcular puntos clave y descriptores
_, descriptors1 = sift.compute(img1, keypoints_cv2)
_, descriptors2 = sift.compute(img2, transformed_keypoints_cv2)

# Configurar el matcher FLANN para comparar descriptores
index_params = dict(algorithm=1, trees=5)
search_params = dict(checks=50)
flann = cv2.FlannBasedMatcher(index_params, search_params)

# Aplicar el matcher FLANN y filtrar las mejores coincidencias
matches = flann.knnMatch(descriptors1, descriptors2, k=2)

# Aplicar el test de razón para eliminar coincidencias pobres
good_matches = [m for m, n in matches if m.distance < 0.9 * n.distance]

# Calcular el porcentaje de coincidencias
total_keypoints = max(len(keypoints), len(transformed_keypoints))
match_percentage = (len(good_matches) / total_keypoints) * 100 if total_keypoints > 0 else 0

print(match_percentage)